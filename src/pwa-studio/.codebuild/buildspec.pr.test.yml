version: 0.2
env:
  parameter-store:
    BRAINTREE_TOKEN: "/pwa/BRAINTREE_TOKEN"
    MAGENTO_BACKEND_URL: "/pwa/MAGENTO_BACKEND_URL"
    DANGER_GITHUB_API_TOKEN: "/pwa/DANGER_GITHUB_API_TOKEN"
    BUNDLESIZE_GITHUB_TOKEN: "/pwa/BUNDLESIZE_GITHUB_TOKEN"
    COVERALLS_REPO_TOKEN: "/pwa/COVERALLS_REPO_TOKEN"
phases:
  install:
    commands:
      - echo entering install step...
      # for yarn
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt-get update -y
      - apt-get install -y yarn
  pre_build:
    commands:
      - echo setting environment variables for CI test check services for Coveralls, BundleSize...
      - COVERALLS_SERVICE_NAME=codebuild
      - CI=true
      - CI_PULL_REQUEST=$(echo $CODEBUILD_SOURCE_VERSION | cut -d'/' -f 2)
      - CI_PULL_REQUEST_NUMBER=${CI_PULL_REQUEST}
      - CI_REPO_OWNER=magento-research
      - CI_REPO_NAME=pwa-studio
      - CI_COMMIT_SHA=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo copying env vars needed for build to env file...
      - sed -i "s%MAGENTO_BACKEND_URL=redacted%MAGENTO_BACKEND_URL=${MAGENTO_BACKEND_URL}%g" ./docker/.env.docker.prod
      - sed -i "s/BRAINTREE_TOKEN=redacted/BRAINTREE_TOKEN=${BRAINTREE_TOKEN}/g" ./docker/.env.docker.prod
  build:
    commands:
      - echo running pr-checks script `date`
      # contains all the pr check task scripts
      - yarn run ci:pr-checks
  post_build:
    commands:
      - echo pr test tasks complete `date`
artifacts:
  files:
    - test-results/**/*
  name: $(date +%m-%d-%Y-%T)_test_results_pr-$(echo $CODEBUILD_SOURCE_VERSION | cut -d'/' -f 2)
