// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders with renderErrors 1`] = `
ReactTestInstance {
  "_fiber": FiberNode {
    "_debugHookTypes": Array [
      "useReducer",
    ],
    "_debugID": 56,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": null,
    "_debugSource": null,
    "alternate": null,
    "child": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 57,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 58,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 59,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "isMasked": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "isMasked": true,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 62,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 63,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isMasked": true,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "isActive": true,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "isActive": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isActive": true,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 61,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "ToastContainer",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isMasked": true,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": undefined,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
              "tag": 5,
              "type": "ToastContainer",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "isActive": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "isMasked": true,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [
                Object {
                  "error": Object {
                    "message": "A render error",
                    "stack": "errorStack",
                  },
                  "id": "1",
                  "loc": "1",
                },
              ],
              Array [
                [Error: A render error!],
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": Object {
                        "message": "A render error",
                        "stack": "errorStack",
                      },
                      "id": "1",
                      "loc": "1",
                    },
                  ],
                  [Function],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": Object {
                            "message": "A render error",
                            "stack": "errorStack",
                          },
                          "id": "1",
                          "loc": "1",
                        },
                      ],
                      [Function],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": Object {
                      "message": "A render error",
                      "stack": "errorStack",
                    },
                    "id": "1",
                    "loc": "1",
                  },
                ],
                [Function],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 0,
      "elementType": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": Object {},
          "_currentValue": undefined,
          "_currentValue2": undefined,
          "_threadCount": 0,
        },
      },
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 58,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 59,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "isMasked": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "isMasked": true,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 62,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 63,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isMasked": true,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "isActive": true,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "isActive": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isActive": true,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 61,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "ToastContainer",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isMasked": true,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": undefined,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
              "tag": 5,
              "type": "ToastContainer",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "isActive": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "isMasked": true,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [
                Object {
                  "error": Object {
                    "message": "A render error",
                    "stack": "errorStack",
                  },
                  "id": "1",
                  "loc": "1",
                },
              ],
              Array [
                [Error: A render error!],
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": Object {
                        "message": "A render error",
                        "stack": "errorStack",
                      },
                      "id": "1",
                      "loc": "1",
                    },
                  ],
                  [Function],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": Object {
                            "message": "A render error",
                            "stack": "errorStack",
                          },
                          "id": "1",
                          "loc": "1",
                        },
                      ],
                      [Function],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": Object {
                      "message": "A render error",
                      "stack": "errorStack",
                    },
                    "id": "1",
                    "loc": "1",
                  },
                ],
                [Function],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 58,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 59,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "isMasked": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "isMasked": true,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 62,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 63,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isMasked": true,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "isActive": true,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "isActive": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isActive": true,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 61,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "ToastContainer",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isMasked": true,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": undefined,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
              "tag": 5,
              "type": "ToastContainer",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "isActive": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "isMasked": true,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [
                Object {
                  "error": Object {
                    "message": "A render error",
                    "stack": "errorStack",
                  },
                  "id": "1",
                  "loc": "1",
                },
              ],
              Array [
                [Error: A render error!],
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": Object {
                        "message": "A render error",
                        "stack": "errorStack",
                      },
                      "id": "1",
                      "loc": "1",
                    },
                  ],
                  [Function],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": Object {
                            "message": "A render error",
                            "stack": "errorStack",
                          },
                          "id": "1",
                          "loc": "1",
                        },
                      ],
                      [Function],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": Object {
                      "message": "A render error",
                      "stack": "errorStack",
                    },
                    "id": "1",
                    "loc": "1",
                  },
                ],
                [Function],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "memoizedProps": Object {
        "children": <App
          app={
            Object {
              "drawer": "",
              "hasBeenOffline": true,
              "isOnline": false,
              "overlay": false,
            }
          }
          closeDrawer={[MockFunction]}
          markErrorHandled={[MockFunction]}
          renderError={[Error: A render error!]}
          unhandledErrors={Array []}
        />,
        "value": Array [
          Object {
            "toasts": Map {},
          },
          [Function],
        ],
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "children": <App
          app={
            Object {
              "drawer": "",
              "hasBeenOffline": true,
              "isOnline": false,
              "overlay": false,
            }
          }
          closeDrawer={[MockFunction]}
          markErrorHandled={[MockFunction]}
          renderError={[Error: A render error!]}
          unhandledErrors={Array []}
        />,
        "value": Array [
          Object {
            "toasts": Map {},
          },
          [Function],
        ],
      },
      "ref": null,
      "return": [Circular],
      "sibling": null,
      "stateNode": null,
      "tag": 10,
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": Object {},
          "_currentValue": undefined,
          "_currentValue2": undefined,
          "_threadCount": 0,
        },
      },
      "updateQueue": null,
    },
    "childExpirationTime": 0,
    "contextDependencies": null,
    "effectTag": 1,
    "elementType": [Function],
    "expirationTime": 0,
    "firstEffect": FiberNode {
      "_debugHookTypes": Array [
        "useCallback",
        "useMemo",
        "useEffect",
        "useEffect",
      ],
      "_debugID": 58,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 59,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": "Main",
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "isMasked": true,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "isMasked": true,
        },
        "ref": null,
        "return": [Circular],
        "sibling": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 60,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 62,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 63,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "button",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": undefined,
                "onClick": undefined,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": undefined,
                "onClick": undefined,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isMasked": true,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "button",
              },
              "tag": 5,
              "type": "button",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "classes": Object {},
              "isActive": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "classes": Object {},
              "isActive": true,
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Mask {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "classes": Object {},
                "isActive": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "isActive": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "isActive": true,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 61,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "ToastContainer",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 2,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {},
              "rootContainerInstance": Object {
                "children": Array [
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "isMasked": true,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "Main",
                  },
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "className": undefined,
                      "onClick": undefined,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "button",
                  },
                  [Circular],
                ],
                "createNodeMock": [Function],
                "tag": "CONTAINER",
              },
              "tag": "INSTANCE",
              "type": "ToastContainer",
            },
            "tag": 5,
            "type": "ToastContainer",
            "updateQueue": null,
          },
          "stateNode": _class {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "isActive": true,
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "stateNode": Object {
          "children": Array [],
          "isHidden": false,
          "props": Object {
            "isMasked": true,
          },
          "rootContainerInstance": Object {
            "children": Array [
              [Circular],
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "button",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
            ],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "tag": "INSTANCE",
          "type": "Main",
        },
        "tag": 5,
        "type": "Main",
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 517,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": [Error: A render error!],
        "unhandledErrors": Array [],
      },
      "memoizedState": Object {
        "baseState": null,
        "baseUpdate": null,
        "memoizedState": Array [
          [Function],
          Array [],
        ],
        "next": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              Object {
                "error": Object {
                  "message": "A render error",
                  "stack": "errorStack",
                },
                "id": "1",
                "loc": "1",
              },
            ],
            Array [
              [Error: A render error!],
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": Object {
                      "message": "A render error",
                      "stack": "errorStack",
                    },
                    "id": "1",
                    "loc": "1",
                  },
                ],
                [Function],
              ],
              "destroy": undefined,
              "next": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": [Circular],
                "tag": 192,
              },
              "tag": 192,
            },
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    Array [
                      Object {
                        "error": Object {
                          "message": "A render error",
                          "stack": "errorStack",
                        },
                        "id": "1",
                        "loc": "1",
                      },
                    ],
                    [Function],
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": null,
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "queue": null,
      },
      "mode": 0,
      "nextEffect": [Circular],
      "pendingProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": [Error: A render error!],
        "unhandledErrors": Array [],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 57,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={[Error: A render error!]}
            unhandledErrors={Array []}
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={[Error: A render error!]}
            unhandledErrors={Array []}
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "sibling": null,
      "stateNode": null,
      "tag": 0,
      "type": [Function],
      "updateQueue": Object {
        "lastEffect": Object {
          "create": [Function],
          "deps": Array [
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                    "onDismiss": [Function],
                    "timeout": 15000,
                    "type": "error",
                  },
                ],
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "You are offline. Some features may be unavailable.",
                    "timeout": 3000,
                    "type": "error",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            true,
            false,
          ],
          "destroy": undefined,
          "next": Object {
            "create": [Function],
            "deps": Array [
              Array [
                Object {
                  "error": Object {
                    "message": "A render error",
                    "stack": "errorStack",
                  },
                  "id": "1",
                  "loc": "1",
                },
              ],
              [Function],
            ],
            "destroy": undefined,
            "next": [Circular],
            "tag": 192,
          },
          "tag": 192,
        },
      },
    },
    "index": 0,
    "key": null,
    "lastEffect": FiberNode {
      "_debugHookTypes": Array [
        "useCallback",
        "useMemo",
        "useEffect",
        "useEffect",
      ],
      "_debugID": 58,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 59,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": "Main",
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "isMasked": true,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "isMasked": true,
        },
        "ref": null,
        "return": [Circular],
        "sibling": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 60,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 62,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 63,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "button",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": undefined,
                "onClick": undefined,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": undefined,
                "onClick": undefined,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isMasked": true,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "button",
              },
              "tag": 5,
              "type": "button",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "classes": Object {},
              "isActive": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "classes": Object {},
              "isActive": true,
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Mask {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "classes": Object {},
                "isActive": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "isActive": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "isActive": true,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 61,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "ToastContainer",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 2,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {},
              "rootContainerInstance": Object {
                "children": Array [
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "isMasked": true,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "Main",
                  },
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "className": undefined,
                      "onClick": undefined,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "button",
                  },
                  [Circular],
                ],
                "createNodeMock": [Function],
                "tag": "CONTAINER",
              },
              "tag": "INSTANCE",
              "type": "ToastContainer",
            },
            "tag": 5,
            "type": "ToastContainer",
            "updateQueue": null,
          },
          "stateNode": _class {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "isActive": true,
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "stateNode": Object {
          "children": Array [],
          "isHidden": false,
          "props": Object {
            "isMasked": true,
          },
          "rootContainerInstance": Object {
            "children": Array [
              [Circular],
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "button",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
            ],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "tag": "INSTANCE",
          "type": "Main",
        },
        "tag": 5,
        "type": "Main",
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 517,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": [Error: A render error!],
        "unhandledErrors": Array [],
      },
      "memoizedState": Object {
        "baseState": null,
        "baseUpdate": null,
        "memoizedState": Array [
          [Function],
          Array [],
        ],
        "next": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [
              Object {
                "error": Object {
                  "message": "A render error",
                  "stack": "errorStack",
                },
                "id": "1",
                "loc": "1",
              },
            ],
            Array [
              [Error: A render error!],
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": Object {
                      "message": "A render error",
                      "stack": "errorStack",
                    },
                    "id": "1",
                    "loc": "1",
                  },
                ],
                [Function],
              ],
              "destroy": undefined,
              "next": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": [Circular],
                "tag": 192,
              },
              "tag": 192,
            },
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    Array [
                      Object {
                        "error": Object {
                          "message": "A render error",
                          "stack": "errorStack",
                        },
                        "id": "1",
                        "loc": "1",
                      },
                    ],
                    [Function],
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": null,
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "queue": null,
      },
      "mode": 0,
      "nextEffect": [Circular],
      "pendingProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": [Error: A render error!],
        "unhandledErrors": Array [],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 57,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={[Error: A render error!]}
            unhandledErrors={Array []}
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={[Error: A render error!]}
            unhandledErrors={Array []}
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "sibling": null,
      "stateNode": null,
      "tag": 0,
      "type": [Function],
      "updateQueue": Object {
        "lastEffect": Object {
          "create": [Function],
          "deps": Array [
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                    "onDismiss": [Function],
                    "timeout": 15000,
                    "type": "error",
                  },
                ],
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "You are offline. Some features may be unavailable.",
                    "timeout": 3000,
                    "type": "error",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            true,
            false,
          ],
          "destroy": undefined,
          "next": Object {
            "create": [Function],
            "deps": Array [
              Array [
                Object {
                  "error": Object {
                    "message": "A render error",
                    "stack": "errorStack",
                  },
                  "id": "1",
                  "loc": "1",
                },
              ],
              [Function],
            ],
            "destroy": undefined,
            "next": [Circular],
            "tag": 192,
          },
          "tag": 192,
        },
      },
    },
    "memoizedProps": Object {
      "children": <App
        app={
          Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          }
        }
        closeDrawer={[MockFunction]}
        markErrorHandled={[MockFunction]}
        renderError={[Error: A render error!]}
        unhandledErrors={Array []}
      />,
    },
    "memoizedState": Object {
      "baseState": Object {
        "toasts": Map {},
      },
      "baseUpdate": null,
      "memoizedState": Object {
        "toasts": Map {},
      },
      "next": null,
      "queue": Object {
        "dispatch": [Function],
        "last": null,
        "lastRenderedReducer": [Function],
        "lastRenderedState": Object {
          "toasts": Map {},
        },
      },
    },
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "children": <App
        app={
          Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          }
        }
        closeDrawer={[MockFunction]}
        markErrorHandled={[MockFunction]}
        renderError={[Error: A render error!]}
        unhandledErrors={Array []}
      />,
    },
    "ref": null,
    "return": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 54,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 54,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": [Circular],
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 1073741823,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": Object {
            "children": Array [
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isMasked": true,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "Main",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "button",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
            ],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "type": null,
        "updateQueue": Object {
          "baseState": null,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <ToastContextProvider>
                <App
                  app={
                    Object {
                      "drawer": "",
                      "hasBeenOffline": true,
                      "isOnline": false,
                      "overlay": false,
                    }
                  }
                  closeDrawer={[MockFunction]}
                  markErrorHandled={[MockFunction]}
                  renderError={[Error: A render error!]}
                  unhandledErrors={Array []}
                />
              </ToastContextProvider>,
            },
            "tag": 0,
          },
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <ToastContextProvider>
                <App
                  app={
                    Object {
                      "drawer": "",
                      "hasBeenOffline": true,
                      "isOnline": false,
                      "overlay": false,
                    }
                  }
                  closeDrawer={[MockFunction]}
                  markErrorHandled={[MockFunction]}
                  renderError={[Error: A render error!]}
                  unhandledErrors={Array []}
                />
              </ToastContextProvider>,
            },
            "tag": 0,
          },
        },
      },
      "child": [Circular],
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 0,
      "elementType": null,
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 58,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 59,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "isMasked": true,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "isMasked": true,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 60,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 62,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 63,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": undefined,
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isMasked": true,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "isActive": true,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "isActive": true,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "isActive": true,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isActive": true,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 61,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "ToastContainer",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isMasked": true,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": undefined,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
              "tag": 5,
              "type": "ToastContainer",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "isActive": true,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "isMasked": true,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": undefined,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [
                Object {
                  "error": Object {
                    "message": "A render error",
                    "stack": "errorStack",
                  },
                  "id": "1",
                  "loc": "1",
                },
              ],
              Array [
                [Error: A render error!],
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": Object {
                        "message": "A render error",
                        "stack": "errorStack",
                      },
                      "id": "1",
                      "loc": "1",
                    },
                  ],
                  [Function],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": Object {
                            "message": "A render error",
                            "stack": "errorStack",
                          },
                          "id": "1",
                          "loc": "1",
                        },
                      ],
                      [Function],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": [Error: A render error!],
          "unhandledErrors": Array [],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 57,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": Object {},
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": <App
              app={
                Object {
                  "drawer": "",
                  "hasBeenOffline": true,
                  "isOnline": false,
                  "overlay": false,
                }
              }
              closeDrawer={[MockFunction]}
              markErrorHandled={[MockFunction]}
              renderError={[Error: A render error!]}
              unhandledErrors={Array []}
            />,
            "value": Array [
              Object {
                "toasts": Map {},
              },
              [Function],
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <App
              app={
                Object {
                  "drawer": "",
                  "hasBeenOffline": true,
                  "isOnline": false,
                  "overlay": false,
                }
              }
              closeDrawer={[MockFunction]}
              markErrorHandled={[MockFunction]}
              renderError={[Error: A render error!]}
              unhandledErrors={Array []}
            />,
            "value": Array [
              Object {
                "toasts": Map {},
              },
              [Function],
            ],
          },
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": Object {},
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: 1 1",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": Object {
                      "message": "A render error",
                      "stack": "errorStack",
                    },
                    "id": "1",
                    "loc": "1",
                  },
                ],
                [Function],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <ToastContextProvider>
          <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={[Error: A render error!]}
            unhandledErrors={Array []}
          />
        </ToastContextProvider>,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "sibling": null,
      "stateNode": Object {
        "containerInfo": Object {
          "children": Array [
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "isMasked": true,
              },
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "Main",
            },
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "className": undefined,
                "onClick": undefined,
              },
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "button",
            },
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {},
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "ToastContainer",
            },
          ],
          "createNodeMock": [Function],
          "tag": "CONTAINER",
        },
        "context": Object {},
        "current": [Circular],
        "didError": false,
        "earliestPendingTime": 0,
        "earliestSuspendedTime": 0,
        "expirationTime": 0,
        "finishedWork": null,
        "firstBatch": null,
        "hydrate": false,
        "latestPendingTime": 0,
        "latestPingedTime": 0,
        "latestSuspendedTime": 0,
        "nextExpirationTimeToWorkOn": 0,
        "nextScheduledRoot": null,
        "pendingChildren": null,
        "pendingCommitExpirationTime": 0,
        "pendingContext": null,
        "pingCache": null,
        "timeoutHandle": -1,
      },
      "tag": 3,
      "type": null,
      "updateQueue": Object {
        "baseState": Object {
          "element": <ToastContextProvider>
            <App
              app={
                Object {
                  "drawer": "",
                  "hasBeenOffline": true,
                  "isOnline": false,
                  "overlay": false,
                }
              }
              closeDrawer={[MockFunction]}
              markErrorHandled={[MockFunction]}
              renderError={[Error: A render error!]}
              unhandledErrors={Array []}
            />
          </ToastContextProvider>,
        },
        "firstCapturedEffect": null,
        "firstCapturedUpdate": null,
        "firstEffect": null,
        "firstUpdate": null,
        "lastCapturedEffect": null,
        "lastCapturedUpdate": null,
        "lastEffect": null,
        "lastUpdate": null,
      },
    },
    "sibling": null,
    "stateNode": null,
    "tag": 0,
    "type": [Function],
    "updateQueue": null,
  },
}
`;

exports[`renders with unhandledErrors 1`] = `
ReactTestInstance {
  "_fiber": FiberNode {
    "_debugHookTypes": Array [
      "useReducer",
    ],
    "_debugID": 66,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": null,
    "_debugSource": null,
    "alternate": null,
    "child": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 67,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 69,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 74,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Routes {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 70,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 75,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 76,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "MiniCart",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "dismiss": [MockFunction],
                  "isActive": false,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 71,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "Navigation",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "isOpen": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isOpen": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 72,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "MiniCart",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 3,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "isOpen": false,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "isOpen": false,
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 73,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "ToastContainer",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 4,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {},
                    "rootContainerInstance": Object {
                      "children": Array [
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "children": <Routes />,
                            "hasBeenOffline": true,
                            "isMasked": false,
                            "isOnline": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Main",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "className": undefined,
                            "onClick": [MockFunction],
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "button",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Navigation",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "MiniCart",
                        },
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "ToastContainer",
                  },
                  "tag": 5,
                  "type": "ToastContainer",
                  "updateQueue": null,
                },
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "className": undefined,
                          "onClick": [MockFunction],
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "button",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                "tag": 5,
                "type": "MiniCart",
                "updateQueue": null,
              },
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": [MockFunction],
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "MiniCart",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              "tag": 5,
              "type": "Navigation",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "children": <Routes />,
              "hasBeenOffline": true,
              "isMasked": false,
              "isOnline": false,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "Navigation",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [],
              Array [
                null,
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": [Error: A render error!],
                    },
                  ],
                  [MockFunction],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": [Error: A render error!],
                        },
                      ],
                      [MockFunction],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ],
                [MockFunction],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 0,
      "elementType": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": Object {},
          "_currentValue": undefined,
          "_currentValue2": undefined,
          "_threadCount": 0,
        },
      },
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 69,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 74,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Routes {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 70,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 75,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 76,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "MiniCart",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "dismiss": [MockFunction],
                  "isActive": false,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 71,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "Navigation",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "isOpen": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isOpen": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 72,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "MiniCart",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 3,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "isOpen": false,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "isOpen": false,
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 73,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "ToastContainer",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 4,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {},
                    "rootContainerInstance": Object {
                      "children": Array [
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "children": <Routes />,
                            "hasBeenOffline": true,
                            "isMasked": false,
                            "isOnline": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Main",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "className": undefined,
                            "onClick": [MockFunction],
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "button",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Navigation",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "MiniCart",
                        },
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "ToastContainer",
                  },
                  "tag": 5,
                  "type": "ToastContainer",
                  "updateQueue": null,
                },
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "className": undefined,
                          "onClick": [MockFunction],
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "button",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                "tag": 5,
                "type": "MiniCart",
                "updateQueue": null,
              },
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": [MockFunction],
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "MiniCart",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              "tag": 5,
              "type": "Navigation",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "children": <Routes />,
              "hasBeenOffline": true,
              "isMasked": false,
              "isOnline": false,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "Navigation",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [],
              Array [
                null,
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": [Error: A render error!],
                    },
                  ],
                  [MockFunction],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": [Error: A render error!],
                        },
                      ],
                      [MockFunction],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ],
                [MockFunction],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 69,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 74,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Routes {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 70,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 75,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 76,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "MiniCart",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "dismiss": [MockFunction],
                  "isActive": false,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 71,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "Navigation",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "isOpen": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isOpen": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 72,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "MiniCart",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 3,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "isOpen": false,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "isOpen": false,
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 73,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "ToastContainer",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 4,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {},
                    "rootContainerInstance": Object {
                      "children": Array [
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "children": <Routes />,
                            "hasBeenOffline": true,
                            "isMasked": false,
                            "isOnline": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Main",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "className": undefined,
                            "onClick": [MockFunction],
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "button",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Navigation",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "MiniCart",
                        },
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "ToastContainer",
                  },
                  "tag": 5,
                  "type": "ToastContainer",
                  "updateQueue": null,
                },
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "className": undefined,
                          "onClick": [MockFunction],
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "button",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                "tag": 5,
                "type": "MiniCart",
                "updateQueue": null,
              },
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": [MockFunction],
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "MiniCart",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              "tag": 5,
              "type": "Navigation",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "children": <Routes />,
              "hasBeenOffline": true,
              "isMasked": false,
              "isOnline": false,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "Navigation",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [],
              Array [
                null,
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": [Error: A render error!],
                    },
                  ],
                  [MockFunction],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": [Error: A render error!],
                        },
                      ],
                      [MockFunction],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ],
                [MockFunction],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "memoizedProps": Object {
        "children": <App
          app={
            Object {
              "drawer": "",
              "hasBeenOffline": true,
              "isOnline": false,
              "overlay": false,
            }
          }
          closeDrawer={[MockFunction]}
          markErrorHandled={[MockFunction]}
          renderError={null}
          unhandledErrors={
            Array [
              Object {
                "error": [Error: A render error!],
              },
            ]
          }
        />,
        "value": Array [
          Object {
            "toasts": Map {},
          },
          [Function],
        ],
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "children": <App
          app={
            Object {
              "drawer": "",
              "hasBeenOffline": true,
              "isOnline": false,
              "overlay": false,
            }
          }
          closeDrawer={[MockFunction]}
          markErrorHandled={[MockFunction]}
          renderError={null}
          unhandledErrors={
            Array [
              Object {
                "error": [Error: A render error!],
              },
            ]
          }
        />,
        "value": Array [
          Object {
            "toasts": Map {},
          },
          [Function],
        ],
      },
      "ref": null,
      "return": [Circular],
      "sibling": null,
      "stateNode": null,
      "tag": 10,
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": Object {},
          "_currentValue": undefined,
          "_currentValue2": undefined,
          "_threadCount": 0,
        },
      },
      "updateQueue": null,
    },
    "childExpirationTime": 0,
    "contextDependencies": null,
    "effectTag": 1,
    "elementType": [Function],
    "expirationTime": 0,
    "firstEffect": FiberNode {
      "_debugHookTypes": Array [
        "useCallback",
        "useMemo",
        "useEffect",
        "useEffect",
      ],
      "_debugID": 68,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 69,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 74,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": Routes {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {},
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": "Main",
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <Routes />,
          "hasBeenOffline": true,
          "isMasked": false,
          "isOnline": false,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <Routes />,
          "hasBeenOffline": true,
          "isMasked": false,
          "isOnline": false,
        },
        "ref": null,
        "return": [Circular],
        "sibling": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 70,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 75,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 76,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "button",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": undefined,
                "onClick": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": undefined,
                "onClick": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Navigation",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "MiniCart",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "button",
              },
              "tag": 5,
              "type": "button",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "classes": Object {},
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "classes": Object {},
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Mask {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "dismiss": [MockFunction],
            "isActive": false,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "dismiss": [MockFunction],
            "isActive": false,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 71,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "Navigation",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 2,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "isOpen": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isOpen": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 72,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "MiniCart",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 3,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "isOpen": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isOpen": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 73,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "ToastContainer",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 4,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "className": undefined,
                          "onClick": [MockFunction],
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "button",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "MiniCart",
                      },
                      [Circular],
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
                "tag": 5,
                "type": "ToastContainer",
                "updateQueue": null,
              },
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": [MockFunction],
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Navigation",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "MiniCart",
              },
              "tag": 5,
              "type": "MiniCart",
              "updateQueue": null,
            },
            "stateNode": Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "isOpen": false,
              },
              "rootContainerInstance": Object {
                "children": Array [
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "children": <Routes />,
                      "hasBeenOffline": true,
                      "isMasked": false,
                      "isOnline": false,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "Main",
                  },
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "className": undefined,
                      "onClick": [MockFunction],
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "button",
                  },
                  [Circular],
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "isOpen": false,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "MiniCart",
                  },
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {},
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "ToastContainer",
                  },
                ],
                "createNodeMock": [Function],
                "tag": "CONTAINER",
              },
              "tag": "INSTANCE",
              "type": "Navigation",
            },
            "tag": 5,
            "type": "Navigation",
            "updateQueue": null,
          },
          "stateNode": _class {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "stateNode": Object {
          "children": Array [],
          "isHidden": false,
          "props": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "rootContainerInstance": Object {
            "children": Array [
              [Circular],
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "button",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "MiniCart",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
            ],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "tag": "INSTANCE",
          "type": "Main",
        },
        "tag": 5,
        "type": "Main",
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 517,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": null,
        "unhandledErrors": Array [
          Object {
            "error": [Error: A render error!],
          },
        ],
      },
      "memoizedState": Object {
        "baseState": null,
        "baseUpdate": null,
        "memoizedState": Array [
          [Function],
          Array [],
        ],
        "next": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [],
            Array [
              null,
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ],
                [MockFunction],
              ],
              "destroy": undefined,
              "next": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": [Circular],
                "tag": 192,
              },
              "tag": 192,
            },
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    Array [
                      Object {
                        "error": [Error: A render error!],
                      },
                    ],
                    [MockFunction],
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": null,
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "queue": null,
      },
      "mode": 0,
      "nextEffect": [Circular],
      "pendingProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": null,
        "unhandledErrors": Array [
          Object {
            "error": [Error: A render error!],
          },
        ],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 67,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={null}
            unhandledErrors={
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ]
            }
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={null}
            unhandledErrors={
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ]
            }
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "sibling": null,
      "stateNode": null,
      "tag": 0,
      "type": [Function],
      "updateQueue": Object {
        "lastEffect": Object {
          "create": [Function],
          "deps": Array [
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                    "onDismiss": [Function],
                    "timeout": 15000,
                    "type": "error",
                  },
                ],
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "You are offline. Some features may be unavailable.",
                    "timeout": 3000,
                    "type": "error",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            true,
            false,
          ],
          "destroy": undefined,
          "next": Object {
            "create": [Function],
            "deps": Array [
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ],
              [MockFunction],
            ],
            "destroy": undefined,
            "next": [Circular],
            "tag": 192,
          },
          "tag": 192,
        },
      },
    },
    "index": 0,
    "key": null,
    "lastEffect": FiberNode {
      "_debugHookTypes": Array [
        "useCallback",
        "useMemo",
        "useEffect",
        "useEffect",
      ],
      "_debugID": 68,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": null,
      "child": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 69,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 74,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": null,
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": Routes {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {},
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": "Main",
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "children": <Routes />,
          "hasBeenOffline": true,
          "isMasked": false,
          "isOnline": false,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <Routes />,
          "hasBeenOffline": true,
          "isMasked": false,
          "isOnline": false,
        },
        "ref": null,
        "return": [Circular],
        "sibling": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 70,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 75,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 76,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "button",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "className": undefined,
                "onClick": [MockFunction],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "className": undefined,
                "onClick": [MockFunction],
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Navigation",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "MiniCart",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "button",
              },
              "tag": 5,
              "type": "button",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "classes": Object {},
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "classes": Object {},
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Mask {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 1,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "dismiss": [MockFunction],
            "isActive": false,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "dismiss": [MockFunction],
            "isActive": false,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 71,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "Navigation",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 2,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "isOpen": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "isOpen": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 72,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "MiniCart",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 3,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "isOpen": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isOpen": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 73,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "ToastContainer",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 4,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "className": undefined,
                          "onClick": [MockFunction],
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "button",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "MiniCart",
                      },
                      [Circular],
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
                "tag": 5,
                "type": "ToastContainer",
                "updateQueue": null,
              },
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": [MockFunction],
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Navigation",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "MiniCart",
              },
              "tag": 5,
              "type": "MiniCart",
              "updateQueue": null,
            },
            "stateNode": Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "isOpen": false,
              },
              "rootContainerInstance": Object {
                "children": Array [
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "children": <Routes />,
                      "hasBeenOffline": true,
                      "isMasked": false,
                      "isOnline": false,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "Main",
                  },
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "className": undefined,
                      "onClick": [MockFunction],
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "button",
                  },
                  [Circular],
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {
                      "isOpen": false,
                    },
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "MiniCart",
                  },
                  Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {},
                    "rootContainerInstance": [Circular],
                    "tag": "INSTANCE",
                    "type": "ToastContainer",
                  },
                ],
                "createNodeMock": [Function],
                "tag": "CONTAINER",
              },
              "tag": "INSTANCE",
              "type": "Navigation",
            },
            "tag": 5,
            "type": "Navigation",
            "updateQueue": null,
          },
          "stateNode": _class {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "type": [Function],
          "updateQueue": null,
        },
        "stateNode": Object {
          "children": Array [],
          "isHidden": false,
          "props": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "rootContainerInstance": Object {
            "children": Array [
              [Circular],
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "button",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "MiniCart",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
            ],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "tag": "INSTANCE",
          "type": "Main",
        },
        "tag": 5,
        "type": "Main",
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 517,
      "elementType": [Function],
      "expirationTime": 0,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": null,
        "unhandledErrors": Array [
          Object {
            "error": [Error: A render error!],
          },
        ],
      },
      "memoizedState": Object {
        "baseState": null,
        "baseUpdate": null,
        "memoizedState": Array [
          [Function],
          Array [],
        ],
        "next": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            Array [],
            Array [
              null,
            ],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ],
                [MockFunction],
              ],
              "destroy": undefined,
              "next": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": [Circular],
                "tag": 192,
              },
              "tag": 192,
            },
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  [MockFunction] {
                    "calls": Array [
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                          "onDismiss": [Function],
                          "timeout": 15000,
                          "type": "error",
                        },
                      ],
                      Array [
                        Object {
                          "icon": <Classify(Icon)
                            attrs={
                              Object {
                                "width": 18,
                              }
                            }
                            src={[Function]}
                          />,
                          "message": "You are offline. Some features may be unavailable.",
                          "timeout": 3000,
                          "type": "error",
                        },
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                      Object {
                        "type": "return",
                        "value": undefined,
                      },
                    ],
                  },
                  true,
                  false,
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    Array [
                      Object {
                        "error": [Error: A render error!],
                      },
                    ],
                    [MockFunction],
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": null,
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "queue": null,
      },
      "mode": 0,
      "nextEffect": [Circular],
      "pendingProps": Object {
        "app": Object {
          "drawer": "",
          "hasBeenOffline": true,
          "isOnline": false,
          "overlay": false,
        },
        "closeDrawer": [MockFunction],
        "markErrorHandled": [MockFunction],
        "renderError": null,
        "unhandledErrors": Array [
          Object {
            "error": [Error: A render error!],
          },
        ],
      },
      "ref": null,
      "return": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 67,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": [Circular],
        "_debugSource": null,
        "alternate": null,
        "child": [Circular],
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "expirationTime": 0,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={null}
            unhandledErrors={
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ]
            }
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={null}
            unhandledErrors={
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ]
            }
          />,
          "value": Array [
            Object {
              "toasts": Map {},
            },
            [Function],
          ],
        },
        "ref": null,
        "return": [Circular],
        "sibling": null,
        "stateNode": null,
        "tag": 10,
        "type": Object {
          "$$typeof": Symbol(react.provider),
          "_context": Object {
            "$$typeof": Symbol(react.context),
            "Consumer": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": [Circular],
            },
            "Provider": [Circular],
            "_calculateChangedBits": null,
            "_currentRenderer": null,
            "_currentRenderer2": Object {},
            "_currentValue": undefined,
            "_currentValue2": undefined,
            "_threadCount": 0,
          },
        },
        "updateQueue": null,
      },
      "sibling": null,
      "stateNode": null,
      "tag": 0,
      "type": [Function],
      "updateQueue": Object {
        "lastEffect": Object {
          "create": [Function],
          "deps": Array [
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                    "onDismiss": [Function],
                    "timeout": 15000,
                    "type": "error",
                  },
                ],
                Array [
                  Object {
                    "icon": <Classify(Icon)
                      attrs={
                        Object {
                          "width": 18,
                        }
                      }
                      src={[Function]}
                    />,
                    "message": "You are offline. Some features may be unavailable.",
                    "timeout": 3000,
                    "type": "error",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            true,
            false,
          ],
          "destroy": undefined,
          "next": Object {
            "create": [Function],
            "deps": Array [
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ],
              [MockFunction],
            ],
            "destroy": undefined,
            "next": [Circular],
            "tag": 192,
          },
          "tag": 192,
        },
      },
    },
    "memoizedProps": Object {
      "children": <App
        app={
          Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          }
        }
        closeDrawer={[MockFunction]}
        markErrorHandled={[MockFunction]}
        renderError={null}
        unhandledErrors={
          Array [
            Object {
              "error": [Error: A render error!],
            },
          ]
        }
      />,
    },
    "memoizedState": Object {
      "baseState": Object {
        "toasts": Map {},
      },
      "baseUpdate": null,
      "memoizedState": Object {
        "toasts": Map {},
      },
      "next": null,
      "queue": Object {
        "dispatch": [Function],
        "last": null,
        "lastRenderedReducer": [Function],
        "lastRenderedState": Object {
          "toasts": Map {},
        },
      },
    },
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "children": <App
        app={
          Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          }
        }
        closeDrawer={[MockFunction]}
        markErrorHandled={[MockFunction]}
        renderError={null}
        unhandledErrors={
          Array [
            Object {
              "error": [Error: A render error!],
            },
          ]
        }
      />,
    },
    "ref": null,
    "return": FiberNode {
      "_debugHookTypes": null,
      "_debugID": 64,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "alternate": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 64,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": [Circular],
        "child": null,
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 0,
        "elementType": null,
        "expirationTime": 1073741823,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": null,
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": Object {
            "children": Array [
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "children": <Routes />,
                  "hasBeenOffline": true,
                  "isMasked": false,
                  "isOnline": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "Main",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "button",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "MiniCart",
              },
              Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {},
                "rootContainerInstance": [Circular],
                "tag": "INSTANCE",
                "type": "ToastContainer",
              },
            ],
            "createNodeMock": [Function],
            "tag": "CONTAINER",
          },
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pingCache": null,
          "timeoutHandle": -1,
        },
        "tag": 3,
        "type": null,
        "updateQueue": Object {
          "baseState": null,
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <ToastContextProvider>
                <App
                  app={
                    Object {
                      "drawer": "",
                      "hasBeenOffline": true,
                      "isOnline": false,
                      "overlay": false,
                    }
                  }
                  closeDrawer={[MockFunction]}
                  markErrorHandled={[MockFunction]}
                  renderError={null}
                  unhandledErrors={
                    Array [
                      Object {
                        "error": [Error: A render error!],
                      },
                    ]
                  }
                />
              </ToastContextProvider>,
            },
            "tag": 0,
          },
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": Object {
            "callback": null,
            "expirationTime": 1073741823,
            "next": null,
            "nextEffect": null,
            "payload": Object {
              "element": <ToastContextProvider>
                <App
                  app={
                    Object {
                      "drawer": "",
                      "hasBeenOffline": true,
                      "isOnline": false,
                      "overlay": false,
                    }
                  }
                  closeDrawer={[MockFunction]}
                  markErrorHandled={[MockFunction]}
                  renderError={null}
                  unhandledErrors={
                    Array [
                      Object {
                        "error": [Error: A render error!],
                      },
                    ]
                  }
                />
              </ToastContextProvider>,
            },
            "tag": 0,
          },
        },
      },
      "child": [Circular],
      "childExpirationTime": 0,
      "contextDependencies": null,
      "effectTag": 0,
      "elementType": null,
      "expirationTime": 0,
      "firstEffect": FiberNode {
        "_debugHookTypes": Array [
          "useCallback",
          "useMemo",
          "useEffect",
          "useEffect",
        ],
        "_debugID": 68,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 69,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 74,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": null,
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "sibling": null,
            "stateNode": Routes {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {},
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "Main",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Routes />,
            "hasBeenOffline": true,
            "isMasked": false,
            "isOnline": false,
          },
          "ref": null,
          "return": [Circular],
          "sibling": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 70,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 75,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 76,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "button",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "className": undefined,
                  "onClick": [MockFunction],
                },
                "ref": null,
                "return": [Circular],
                "sibling": null,
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "MiniCart",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "button",
                },
                "tag": 5,
                "type": "button",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "classes": Object {},
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": null,
              "stateNode": Mask {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "classes": Object {},
                  "dismiss": [MockFunction],
                  "isActive": false,
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 1,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "dismiss": [MockFunction],
              "isActive": false,
            },
            "ref": null,
            "return": [Circular],
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 71,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "Navigation",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 2,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "isOpen": false,
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "isOpen": false,
              },
              "ref": null,
              "return": [Circular],
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 72,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "MiniCart",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 3,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "isOpen": false,
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "isOpen": false,
                },
                "ref": null,
                "return": [Circular],
                "sibling": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 73,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "ToastContainer",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 4,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "sibling": null,
                  "stateNode": Object {
                    "children": Array [],
                    "isHidden": false,
                    "props": Object {},
                    "rootContainerInstance": Object {
                      "children": Array [
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "children": <Routes />,
                            "hasBeenOffline": true,
                            "isMasked": false,
                            "isOnline": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Main",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "className": undefined,
                            "onClick": [MockFunction],
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "button",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "Navigation",
                        },
                        Object {
                          "children": Array [],
                          "isHidden": false,
                          "props": Object {
                            "isOpen": false,
                          },
                          "rootContainerInstance": [Circular],
                          "tag": "INSTANCE",
                          "type": "MiniCart",
                        },
                        [Circular],
                      ],
                      "createNodeMock": [Function],
                      "tag": "CONTAINER",
                    },
                    "tag": "INSTANCE",
                    "type": "ToastContainer",
                  },
                  "tag": 5,
                  "type": "ToastContainer",
                  "updateQueue": null,
                },
                "stateNode": Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": Object {
                    "children": Array [
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "children": <Routes />,
                          "hasBeenOffline": true,
                          "isMasked": false,
                          "isOnline": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Main",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "className": undefined,
                          "onClick": [MockFunction],
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "button",
                      },
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {
                          "isOpen": false,
                        },
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "Navigation",
                      },
                      [Circular],
                      Object {
                        "children": Array [],
                        "isHidden": false,
                        "props": Object {},
                        "rootContainerInstance": [Circular],
                        "tag": "INSTANCE",
                        "type": "ToastContainer",
                      },
                    ],
                    "createNodeMock": [Function],
                    "tag": "CONTAINER",
                  },
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                "tag": 5,
                "type": "MiniCart",
                "updateQueue": null,
              },
              "stateNode": Object {
                "children": Array [],
                "isHidden": false,
                "props": Object {
                  "isOpen": false,
                },
                "rootContainerInstance": Object {
                  "children": Array [
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "children": <Routes />,
                        "hasBeenOffline": true,
                        "isMasked": false,
                        "isOnline": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "Main",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "className": undefined,
                        "onClick": [MockFunction],
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "button",
                    },
                    [Circular],
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {
                        "isOpen": false,
                      },
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "MiniCart",
                    },
                    Object {
                      "children": Array [],
                      "isHidden": false,
                      "props": Object {},
                      "rootContainerInstance": [Circular],
                      "tag": "INSTANCE",
                      "type": "ToastContainer",
                    },
                  ],
                  "createNodeMock": [Function],
                  "tag": "CONTAINER",
                },
                "tag": "INSTANCE",
                "type": "Navigation",
              },
              "tag": 5,
              "type": "Navigation",
              "updateQueue": null,
            },
            "stateNode": _class {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "dismiss": [MockFunction],
                "isActive": false,
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "type": [Function],
            "updateQueue": null,
          },
          "stateNode": Object {
            "children": Array [],
            "isHidden": false,
            "props": Object {
              "children": <Routes />,
              "hasBeenOffline": true,
              "isMasked": false,
              "isOnline": false,
            },
            "rootContainerInstance": Object {
              "children": Array [
                [Circular],
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "className": undefined,
                    "onClick": [MockFunction],
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "button",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "Navigation",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {
                    "isOpen": false,
                  },
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "MiniCart",
                },
                Object {
                  "children": Array [],
                  "isHidden": false,
                  "props": Object {},
                  "rootContainerInstance": [Circular],
                  "tag": "INSTANCE",
                  "type": "ToastContainer",
                },
              ],
              "createNodeMock": [Function],
              "tag": "CONTAINER",
            },
            "tag": "INSTANCE",
            "type": "Main",
          },
          "tag": 5,
          "type": "Main",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 517,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "memoizedState": Object {
          "baseState": null,
          "baseUpdate": null,
          "memoizedState": Array [
            [Function],
            Array [],
          ],
          "next": Object {
            "baseState": null,
            "baseUpdate": null,
            "memoizedState": Array [
              Array [],
              Array [
                null,
              ],
            ],
            "next": Object {
              "baseState": null,
              "baseUpdate": null,
              "memoizedState": Object {
                "create": [Function],
                "deps": Array [
                  Array [
                    Object {
                      "error": [Error: A render error!],
                    },
                  ],
                  [MockFunction],
                ],
                "destroy": undefined,
                "next": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": [Circular],
                  "tag": 192,
                },
                "tag": 192,
              },
              "next": Object {
                "baseState": null,
                "baseUpdate": null,
                "memoizedState": Object {
                  "create": [Function],
                  "deps": Array [
                    [MockFunction] {
                      "calls": Array [
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                            "onDismiss": [Function],
                            "timeout": 15000,
                            "type": "error",
                          },
                        ],
                        Array [
                          Object {
                            "icon": <Classify(Icon)
                              attrs={
                                Object {
                                  "width": 18,
                                }
                              }
                              src={[Function]}
                            />,
                            "message": "You are offline. Some features may be unavailable.",
                            "timeout": 3000,
                            "type": "error",
                          },
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                        Object {
                          "type": "return",
                          "value": undefined,
                        },
                      ],
                    },
                    true,
                    false,
                  ],
                  "destroy": undefined,
                  "next": Object {
                    "create": [Function],
                    "deps": Array [
                      Array [
                        Object {
                          "error": [Error: A render error!],
                        },
                      ],
                      [MockFunction],
                    ],
                    "destroy": undefined,
                    "next": [Circular],
                    "tag": 192,
                  },
                  "tag": 192,
                },
                "next": null,
                "queue": null,
              },
              "queue": null,
            },
            "queue": null,
          },
          "queue": null,
        },
        "mode": 0,
        "nextEffect": [Circular],
        "pendingProps": Object {
          "app": Object {
            "drawer": "",
            "hasBeenOffline": true,
            "isOnline": false,
            "overlay": false,
          },
          "closeDrawer": [MockFunction],
          "markErrorHandled": [MockFunction],
          "renderError": null,
          "unhandledErrors": Array [
            Object {
              "error": [Error: A render error!],
            },
          ],
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 67,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": Object {},
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "expirationTime": 0,
          "firstEffect": [Circular],
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "children": <App
              app={
                Object {
                  "drawer": "",
                  "hasBeenOffline": true,
                  "isOnline": false,
                  "overlay": false,
                }
              }
              closeDrawer={[MockFunction]}
              markErrorHandled={[MockFunction]}
              renderError={null}
              unhandledErrors={
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ]
              }
            />,
            "value": Array [
              Object {
                "toasts": Map {},
              },
              [Function],
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <App
              app={
                Object {
                  "drawer": "",
                  "hasBeenOffline": true,
                  "isOnline": false,
                  "overlay": false,
                }
              }
              closeDrawer={[MockFunction]}
              markErrorHandled={[MockFunction]}
              renderError={null}
              unhandledErrors={
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ]
              }
            />,
            "value": Array [
              Object {
                "toasts": Map {},
              },
              [Function],
            ],
          },
          "ref": null,
          "return": [Circular],
          "sibling": null,
          "stateNode": null,
          "tag": 10,
          "type": Object {
            "$$typeof": Symbol(react.provider),
            "_context": Object {
              "$$typeof": Symbol(react.context),
              "Consumer": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": [Circular],
              },
              "Provider": [Circular],
              "_calculateChangedBits": null,
              "_currentRenderer": null,
              "_currentRenderer2": Object {},
              "_currentValue": undefined,
              "_currentValue2": undefined,
              "_threadCount": 0,
            },
          },
          "updateQueue": null,
        },
        "sibling": null,
        "stateNode": null,
        "tag": 0,
        "type": [Function],
        "updateQueue": Object {
          "lastEffect": Object {
            "create": [Function],
            "deps": Array [
              [MockFunction] {
                "calls": Array [
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "Sorry! An unexpected error occurred.
Debug: undefined undefined",
                      "onDismiss": [Function],
                      "timeout": 15000,
                      "type": "error",
                    },
                  ],
                  Array [
                    Object {
                      "icon": <Classify(Icon)
                        attrs={
                          Object {
                            "width": 18,
                          }
                        }
                        src={[Function]}
                      />,
                      "message": "You are offline. Some features may be unavailable.",
                      "timeout": 3000,
                      "type": "error",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              true,
              false,
            ],
            "destroy": undefined,
            "next": Object {
              "create": [Function],
              "deps": Array [
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ],
                [MockFunction],
              ],
              "destroy": undefined,
              "next": [Circular],
              "tag": 192,
            },
            "tag": 192,
          },
        },
      },
      "index": 0,
      "key": null,
      "lastEffect": [Circular],
      "memoizedProps": null,
      "memoizedState": Object {
        "element": <ToastContextProvider>
          <App
            app={
              Object {
                "drawer": "",
                "hasBeenOffline": true,
                "isOnline": false,
                "overlay": false,
              }
            }
            closeDrawer={[MockFunction]}
            markErrorHandled={[MockFunction]}
            renderError={null}
            unhandledErrors={
              Array [
                Object {
                  "error": [Error: A render error!],
                },
              ]
            }
          />
        </ToastContextProvider>,
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": null,
      "ref": null,
      "return": null,
      "sibling": null,
      "stateNode": Object {
        "containerInfo": Object {
          "children": Array [
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "children": <Routes />,
                "hasBeenOffline": true,
                "isMasked": false,
                "isOnline": false,
              },
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "Main",
            },
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "className": undefined,
                "onClick": [MockFunction],
              },
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "button",
            },
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "isOpen": false,
              },
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "Navigation",
            },
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {
                "isOpen": false,
              },
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "MiniCart",
            },
            Object {
              "children": Array [],
              "isHidden": false,
              "props": Object {},
              "rootContainerInstance": [Circular],
              "tag": "INSTANCE",
              "type": "ToastContainer",
            },
          ],
          "createNodeMock": [Function],
          "tag": "CONTAINER",
        },
        "context": Object {},
        "current": [Circular],
        "didError": false,
        "earliestPendingTime": 0,
        "earliestSuspendedTime": 0,
        "expirationTime": 0,
        "finishedWork": null,
        "firstBatch": null,
        "hydrate": false,
        "latestPendingTime": 0,
        "latestPingedTime": 0,
        "latestSuspendedTime": 0,
        "nextExpirationTimeToWorkOn": 0,
        "nextScheduledRoot": null,
        "pendingChildren": null,
        "pendingCommitExpirationTime": 0,
        "pendingContext": null,
        "pingCache": null,
        "timeoutHandle": -1,
      },
      "tag": 3,
      "type": null,
      "updateQueue": Object {
        "baseState": Object {
          "element": <ToastContextProvider>
            <App
              app={
                Object {
                  "drawer": "",
                  "hasBeenOffline": true,
                  "isOnline": false,
                  "overlay": false,
                }
              }
              closeDrawer={[MockFunction]}
              markErrorHandled={[MockFunction]}
              renderError={null}
              unhandledErrors={
                Array [
                  Object {
                    "error": [Error: A render error!],
                  },
                ]
              }
            />
          </ToastContextProvider>,
        },
        "firstCapturedEffect": null,
        "firstCapturedUpdate": null,
        "firstEffect": null,
        "firstUpdate": null,
        "lastCapturedEffect": null,
        "lastCapturedUpdate": null,
        "lastEffect": null,
        "lastUpdate": null,
      },
    },
    "sibling": null,
    "stateNode": null,
    "tag": 0,
    "type": [Function],
    "updateQueue": null,
  },
}
`;
