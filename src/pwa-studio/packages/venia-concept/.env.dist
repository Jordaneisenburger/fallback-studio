########## .env.dist ########################################################
#
#   This file is an example of how to configure Magento PWA Studio at
#   development time and runtime. Use these environment variables for any
#   settings which will change between your production, development, and
#   testing environments.
#
#   Copy this file to a file in the `venia-concept` directory called `.env`
#   to activate your project. If a `.env` file is missing, or required
#   variables are missing in your `.env` file, you should be notified.
#
###############################################################################

########## Connecting to a Magento store ######################################
#
#   Connect to an instance of Magento 2.3.1 by specifying its public
#   domain name. **REQUIRED.** Example:
MAGENTO_BACKEND_URL="https://release-dev-231-npzdaky-zddsyhrdimyra.us-4.magentosite.cloud/"
#
#   Use a particular website code when making API calls. Defaults to 'base',
#   but for your PWA to act as a different "website" in the Magento admin,
#   you can change this variable. Example:
#   MAGENTO_WEBSITE_CODE="foo"
#
#   These legacy environment variables from 1.x are no longer necessary:
#   - `MAGENTO_BACKEND_PUBLIC_PATH`: Since PWA Studio no longer makes _themes_,
#     it is no longer necessary to follow theme directory structure.
#   - `SERVICE_WORKER_FILE_NAME`: The `sw.js` filename is suitable for almost
#     all cases, and it does not vary by environment, so it should not be
#     an environment variable. It has been hardcoded into package.json config.

###############################################################################

########## Custom domain configuration ########################################
#
#   PWA Studio comes with a feature that autogenerates a custom domain
#   to aid in distinguishing projects from one another, easily adding HTTPS,
#   and avoiding ServiceWorker collisions.
#
#   See documentation for details.
#   The following variables apply both to the development and staging modes.
#
#   This activates the secure host feature.
MAGENTO_BUILDPACK_PROVIDE_SECURE_HOST=1
#
#   By default your subdomain will be detected from your package.json name.
#   Use this to override it.
#   MAGENTO_BUILDPACK_SECURE_HOST_SUBDOMAIN='custom-value'
#   This will prepend the uniquely generated domain with `custom-value`.
#
#   By default your custom host will be a subdomain of `local.pwadev`.
#   Use this to specify an entire domain, avoiding that TLD.
#   MAGENTO_BUILDPACK_SECURE_HOST_EXACT_DOMAIN='my-favorite.pizza'
#
#   This activates the "unique hash" feature. PWA Studio generates a unique
#   sequence of letters and numbers, only 4 or 5 character long, to guarantee
#   uniqueness among your projects. The hash and port names are generated from
#   a hash of the current directory, so the URL stays constant if the instance
#   stays in the same place.
#   Set this to 0 to disable this feature.
MAGENTO_BUILDPACK_SECURE_HOST_ADD_UNIQUE_HASH=1
#
###############################################################################

########## UPWARD server production configuration #############################
#
#   The current PWA Studio production server is built with NodeJS; it is an
#   implementation of the UPWARD spec, and is theoretically swappable with
#   any other UPWARD-compliant server, with minimal configuration or code
#   changes. Since `upward-js` is the current default implementation, the
#   following environment variables configure `upward-js` specifically.
#
#   Give the server the location of the UPWARD YAML configuration file which
#   specifies its behavior. **REQUIRED**. For Venia, this is automatically set:
UPWARD_JS_UPWARD_PATH=venia-upward.yml
#
#   Tell the upward-js server to bind to a local address and port on launch.
#   Default 1 (true). **REQUIRED** unless you have a custom production setup.
UPWARD_JS_BIND_LOCAL=1
#
#   Tell the upward-js prod server to log the bound URL to stdout. Useful in
#   testing and discovery scenarios, but may be disabled in production.
UPWARD_JS_LOG_URL=1
#
#   Specify a port the upward-js prod-server will bind to. If unspecified, an
#   open port will be found.
#   UPWARD_JS_PORT=8008
#
###############################################################################

########## webpack-dev-server development configuration  ######################
#
#   Set variables for webpack-dev-server for editing and debugging scenarios.
#
#   Set this to 1 (true) to force ServiceWorkers in development.
#   ENABLE_SERVICE_WORKER_DEBUGGING=1
#
###############################################################################

########## Braintree integration configuration  ######################
#
#   Set variables to control your Braintree integration.
#
#   Specify a Braintree token to direct the Venia storefront to communicate
#   with your braintree instance. You can find this value in Braintree's
#   Control Panel under Settings > API Keys > Tokenization Keys.
BRAINTREE_TOKEN=sandbox_8yrzsvtm_s2bg8fs563crhqzk
#
###############################################################################
